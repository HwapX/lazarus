version: 1.0.{build}

branches:
  only:
    - release
  except:
    - master


# Do not build on tags (GitHub only)
skip_tags: true

#---------------------------------#
#    environment configuration    #
#---------------------------------#

shallow_clone: true

matrix:
  fast_finish: true

platform:
  - x86

configuration:
  - Release

environment:
  BINW32_PATH: '%APPVEYOR_BUILD_FOLDER%\..\binw32'
  PPDIR: '%APPVEYOR_BUILD_FOLDER%\..\newpascal\fpc\bin\i386-win32'
  BINW32_DL:
    secure: 638jQ7/uOvgtb2oIeUqEe/6/wQXnTX5Y4M5gGYkz8jE=
  DOWNLOAD_DL:
    secure: 638jQ7/uOvgtb2oIeUqEeyjgKd+47aJdonyR7MdhGuJnZZxNlQqijRl1SOO7oBNW

install:
  - rm appveyor.yml
  - cd ..
  - appveyor DownloadFile %BINW32_DL%
  - 7z x binw32.7z -o%APPVEYOR_BUILD_FOLDER%\.. -y  
  - npm install github
  - npm install download
  - npm install unzip
  - appveyor DownloadFile %DOWNLOAD_DL% -FileName %APPVEYOR_BUILD_FOLDER%\..\download.js
  - node download.js

build_script:
  - SET ORIGINAL_PATH=%PATH%
  - SET PATH=%PPDIR%;%BINW32_PATH%;%WINDIR%\System32
  - cd %APPVEYOR_BUILD_FOLDER%
  - make clean all

after_build:
  - SET PATH=%ORIGINAL_PATH%
  - 7z a -tzip sparta.zip %APPVEYOR_BUILD_FOLDER%
  - move /Y sparta.zip %APPVEYOR_BUILD_FOLDER%
  
artifacts:
  - path: sparta.zip
    name: sparta

deploy:
  release: sparta-v$(appveyor_build_version)
  description: 'Release of Lazarus/Sparta IDE'
  provider: GitHub
  auth_token:
    secure: hciZXDslu8epZhwmm/LfiZBmhbPk7BPpLd/3MOtst/uIRw2LPeAEMCXmBFikJzxQ
  artifact: sparta
  draft: false
  prerelease: false
  on:
    branch: release                 # release from master branch only
    appveyor_repo_tag: false       # ?deploy on tag push only

#---------------------------------#
#     deployment configuration    #
#---------------------------------#

# deploy: off